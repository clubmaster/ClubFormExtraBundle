{% block form_row %}
{% spaceless %}
    <div class="control-group {% if errors|length > 0%}error{% endif %}">
        {{ form_label(form) }}
        <div class="controls">
            {{ form_widget(form) }}
            {% if help is defined %}
                {% for h in help %}
                    <span class="help-block">{{ h|raw|trans }}</span>
                {% endfor %}
            {% endif %}
            {{ form_errors(form) }}
        </div>
    </div>
{% endspaceless %}
{% endblock form_row %}

{% block form_label %}
{% spaceless %}
    {% if not compound %}
        {% set label_attr = label_attr|merge({'for': id}) %}
    {% endif %}
    {% if required %}
        {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
    {% endif %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    <label class="control-label" {% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ label|trans({}, translation_domain) }}</label>
{% endspaceless %}
{% endblock form_label %}

{% block form_errors %}
{% spaceless %}
    {% if errors|length > 0 %}
        {% for error in errors %}
            <span class="help-inline">{{
                error.messagePluralization is null
                    ? error.messageTemplate|trans(error.messageParameters, 'validators')
                    : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')
            }}</span>
        {% endfor %}
    {% endif %}
{% endspaceless %}
{% endblock form_errors %}

{% block tinymce_widget %}
{% spaceless %}
    <script src="//tinymce.cachefly.net/4.0/tinymce.min.js"></script>
    <script type="text/javascript">
    tinyMCE.init({
        mode : "exact",
        elements: "{{ id }}",

        toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
        toolbar2: "print preview media | forecolor backcolor emoticons",

        theme_advanced_toolbar_location : "top",
        theme_advanced_toolbar_align : "left",
        theme_advanced_statusbar_location : "bottom",
        theme_advanced_resizing : true,

        {% if tinymce_language_url is defined %}
        language_url : '{{ tinymce_language_url }}',
        {% endif %}

        content_css : "{{ asset('bundles/clubformextra/css/tinymce.css') }}",

        plugins: [
        "advlist autolink lists link {% if plugins.noimage is not defined %}image {% endif %}charmap print preview hr anchor pagebreak",
        "searchreplace wordcount visualblocks visualchars code fullscreen",
        "insertdatetime {% if plugins.nomedia is not defined %}media {% endif %}nonbreaking save table contextmenu directionality",
        "emoticons paste textcolor"
        ],

        paste_as_text: true,

        width: "{{ tinymce_width }}",
        height: "{{ tinymce_height }}"
    });
    </script>

    {{ form_widget(form) }}
{% endspaceless %}
{% endblock %}

{% block colorpicker_widget %}
{% spaceless %}
    <script src="{{ asset('colpick/js/colpick.js') }}"></script>
    <link rel="stylesheet" href="{{ asset('colpick/css/colpick.css') }}" />
    <script type="text/javascript">
    $(function() {
            $( "#{{ id }}" ).colpick({
                onChange:function(hsb,hex,rgb,fromSetColor) {
                    if(!fromSetColor) $('#{{ id }}').val('#'+hex);
                }
            });
    });
    </script>

    {{ form_widget(form) }}
{% endspaceless %}
{% endblock %}

{% block jquery_datetime_widget %}
{% spaceless %}
    <script>
    $(function() {
        if (!Modernizr.inputtypes.date) {
            $( "#{{ id }}_date" ).datepicker({
              "dateFormat":"yy-mm-dd"
            });
        }
    });

    $(function() {
        var availableTags = [
            "00:00",
            "00:30",
            "01:00",
            "01:30",
            "02:00",
            "02:30",
            "03:00",
            "03:30",
            "04:00",
            "04:30",
            "05:00",
            "05:30",
            "06:00",
            "06:30",
            "07:00",
            "07:30",
            "08:00",
            "08:30",
            "09:00",
            "09:30",
            "10:00",
            "10:30",
            "11:00",
            "11:30",
            "12:00",
            "12:30",
            "13:00",
            "13:30",
            "14:00",
            "14:30",
            "15:00",
            "15:30",
            "16:00",
            "16:30",
            "17:00",
            "17:30",
            "18:00",
            "18:30",
            "19:00",
            "19:30",
            "20:00",
            "20:30",
            "21:00",
            "21:30",
            "22:00",
            "22:30",
            "23:00",
            "23:30"
        ];
        $( "#{{ id }}_time" ).autocomplete({
            source: availableTags,
            minLength: 0
        }).
        focus(function() {
            $("#{{ id }}_time").autocomplete( "search" , "");
        });
    });

    </script>

    <style>
    .ui-autocomplete {
        max-height: 100px;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
    }
    /* IE 6 doesn't support max-height
     * we use height instead, but this forces the menu to always be this tall
     */
    * html .ui-autocomplete {
        height: 100px;
    }
    </style>

    {{ form_widget(form) }}
{% endspaceless %}
{% endblock %}

{% block jquery_date_widget %}
{% spaceless %}
    <script>
    $(function() {
        if (!Modernizr.inputtypes.date) {
            $( "#{{ id }}" ).datepicker({
                'dateFormat': 'yy-mm-dd'
            });
        }
    });
    </script>

    {{ form_widget(form) }}
{% endspaceless %}
{% endblock %}

{% block jquery_birthday_widget %}
{% spaceless %}
    <script>
    $(function() {
        if (!Modernizr.inputtypes.date) {
            $( "#{{ id }}" ).datepicker({
                'dateFormat': 'yy-mm-dd'
            });
        }
    });
    </script>

    {{ form_widget(form) }}
{% endspaceless %}
{% endblock %}

{% block jquery_autocomplete_widget %}
{% spaceless %}
    {% set field_id = '#' ~ id %}

    {% if v is defined %}
        {% include "ClubLayoutBundle:Default:ajax_user.html.twig" with {'f':field_id, 'v':v} %}
    {% else %}
        {% include "ClubLayoutBundle:Default:ajax_user.html.twig" with {'f':field_id} %}
    {% endif %}

    {{ form_widget(form) }}
{% endspaceless %}
{% endblock %}
